[{"D:\\Projects\\repositories-search\\src\\index.tsx":"1","D:\\Projects\\repositories-search\\src\\App.tsx":"2","D:\\Projects\\repositories-search\\src\\views\\components\\RepositoriesList\\RepositoriesList.tsx":"3","D:\\Projects\\repositories-search\\src\\views\\components\\RepositoriesList\\RepositoriesListComponent.tsx":"4","D:\\Projects\\repositories-search\\src\\views\\components\\SearchForm\\SearchForm.tsx":"5","D:\\Projects\\repositories-search\\src\\views\\hooks\\useDebounce.tsx":"6","D:\\Projects\\repositories-search\\src\\store\\index.ts":"7","D:\\Projects\\repositories-search\\src\\store\\repositories\\reducers.ts":"8","D:\\Projects\\repositories-search\\src\\store\\repositories\\types.ts":"9","D:\\Projects\\repositories-search\\src\\sagas\\index.ts":"10","D:\\Projects\\repositories-search\\src\\sagas\\repositories\\repositoriesSaga.ts":"11","D:\\Projects\\repositories-search\\src\\store\\repositories\\actions.ts":"12","D:\\Projects\\repositories-search\\src\\views\\components\\SearchFormWrapper\\SearchFormWrapper.tsx":"13"},{"size":688,"mtime":1611178557804,"results":"14","hashOfConfig":"15"},{"size":301,"mtime":1611253289976,"results":"16","hashOfConfig":"15"},{"size":1318,"mtime":1611312402242,"results":"17","hashOfConfig":"15"},{"size":1272,"mtime":1611312772298,"results":"18","hashOfConfig":"15"},{"size":2482,"mtime":1611313096727,"results":"19","hashOfConfig":"15"},{"size":461,"mtime":1611313130015,"results":"20","hashOfConfig":"15"},{"size":256,"mtime":1611176491011,"results":"21","hashOfConfig":"15"},{"size":471,"mtime":1611181731308,"results":"22","hashOfConfig":"15"},{"size":494,"mtime":1611312772218,"results":"23","hashOfConfig":"15"},{"size":212,"mtime":1611178159348,"results":"24","hashOfConfig":"15"},{"size":960,"mtime":1611312665629,"results":"25","hashOfConfig":"15"},{"size":407,"mtime":1611311883651,"results":"26","hashOfConfig":"15"},{"size":1264,"mtime":1611312417793,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"4iy46x",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"D:\\Projects\\repositories-search\\src\\index.tsx",[],["59","60"],"D:\\Projects\\repositories-search\\src\\App.tsx",[],"D:\\Projects\\repositories-search\\src\\views\\components\\RepositoriesList\\RepositoriesList.tsx",["61"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport RepositoriesListComponent from \"@views/components/RepositoriesList/RepositoriesListComponent\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"@store/index\";\r\nimport { Repository } from \"@store/repositories/types\";\r\n\r\nconst StyledRepositoriesList = styled.div`\r\n  max-width: 456px;\r\n`;\r\n\r\ninterface Props {\r\n  search: string;\r\n}\r\n\r\nconst RepositoriesList: React.FC<Props> = ({ search }) => {\r\n  const repositoriesList = useSelector(\r\n    (state: RootState) => state.repositories.data ?? []\r\n  );\r\n\r\n  const [filteredRepositories, setFilteredRepositories] = useState<\r\n    Repository[]\r\n  >([]);\r\n\r\n  useEffect(() => {\r\n    if (search.length <= 2) {\r\n      setFilteredRepositories([]);\r\n      return;\r\n    }\r\n    const filtered = repositoriesList.filter((repo: Repository) =>\r\n      repo.name.includes(search)\r\n    );\r\n    setFilteredRepositories(filtered);\r\n  }, [search]);\r\n\r\n  return repositoriesList?.length ? (\r\n    <StyledRepositoriesList className=\"w-full absolute top-18 left-0\">\r\n      {filteredRepositories.map((repo) => (\r\n        <RepositoriesListComponent repo={repo} key={repo.id} />\r\n      ))}\r\n    </StyledRepositoriesList>\r\n  ) : null;\r\n};\r\n\r\nexport default RepositoriesList;\r\n","D:\\Projects\\repositories-search\\src\\views\\components\\RepositoriesList\\RepositoriesListComponent.tsx",[],"D:\\Projects\\repositories-search\\src\\views\\components\\SearchForm\\SearchForm.tsx",["62"],"// @ts-ignore\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ReactComponent as SearchIcon } from \"@assets/icons/search-icon.svg\";\r\nimport { ReactComponent as SpinnerIcon } from \"@assets/icons/spinner-icon.svg\";\r\nimport { ReactComponent as CrossIcon } from \"@assets/icons/cross-icon.svg\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"@store/index\";\r\nimport useDebounce from \"@views/hooks/useDebounce\";\r\n\r\nconst Form = styled.form`\r\n  max-width: 456px;\r\n  border-radius: 24px;\r\n`;\r\n\r\nconst SearchForm = React.forwardRef<any, HTMLFormElement>(\r\n  ({ setOuterSearch }, ref) => {\r\n    const [search, setSearch] = useState<string>(\"\");\r\n    const [inputFocused, setInputFocused] = useState<boolean>(false);\r\n\r\n    const debouncedSearch = useDebounce(search);\r\n\r\n    useEffect(() => {\r\n      setOuterSearch(debouncedSearch);\r\n    }, [debouncedSearch]);\r\n\r\n    const storeRepositories = useSelector(\r\n      (state: RootState) => state.repositories\r\n    );\r\n\r\n    const repositoriesLoading = useMemo(() => storeRepositories.loading, [\r\n      storeRepositories,\r\n    ]);\r\n\r\n    const handleSearchChange = (\r\n      e: React.ChangeEvent<HTMLInputElement>\r\n    ): void => {\r\n      setSearch(e.target.value);\r\n    };\r\n\r\n    const handleInputFocus = (): void => {\r\n      setInputFocused(true);\r\n    };\r\n\r\n    const handleInputBlur = (): void => {\r\n      setInputFocused(false);\r\n    };\r\n\r\n    const clearSearch = (): void => {\r\n      setSearch(\"\");\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      clearSearch,\r\n    }));\r\n\r\n    return (\r\n      <Form\r\n        className={`h-12 bg-grey-light border-2 ${\r\n          inputFocused ? \"border-accent\" : \"border-grey\"\r\n        } w-full flex items-center p-4`}\r\n      >\r\n        <button>\r\n          <SearchIcon />\r\n        </button>\r\n        <input\r\n          className=\"mx-4 flex-grow bg-transparent focus:outline-none\"\r\n          type=\"text\"\r\n          value={search}\r\n          onChange={handleSearchChange}\r\n          onFocus={handleInputFocus}\r\n          onBlur={handleInputBlur}\r\n          placeholder=\"Type anything...\"\r\n        />\r\n        {repositoriesLoading ? (\r\n          <SpinnerIcon className=\"animate-spin\" />\r\n        ) : (\r\n          <button type=\"button\" onClick={clearSearch}>\r\n            <CrossIcon />\r\n          </button>\r\n        )}\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n\r\nexport default SearchForm;\r\n","D:\\Projects\\repositories-search\\src\\views\\hooks\\useDebounce.tsx",["63"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst useDebounce = (value: string, timeout: number = 200) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const currentTimeoutId = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, timeout);\r\n\r\n    return () => {\r\n      clearTimeout(currentTimeoutId);\r\n    };\r\n  }, [value, timeout]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","D:\\Projects\\repositories-search\\src\\store\\index.ts",[],"D:\\Projects\\repositories-search\\src\\store\\repositories\\reducers.ts",[],"D:\\Projects\\repositories-search\\src\\store\\repositories\\types.ts",[],"D:\\Projects\\repositories-search\\src\\sagas\\index.ts",[],"D:\\Projects\\repositories-search\\src\\sagas\\repositories\\repositoriesSaga.ts",[],"D:\\Projects\\repositories-search\\src\\store\\repositories\\actions.ts",[],"D:\\Projects\\repositories-search\\src\\views\\components\\SearchFormWrapper\\SearchFormWrapper.tsx",["64"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport SearchForm from \"@views/components/SearchForm/SearchForm\";\r\nimport RepositoriesList from \"@views/components/RepositoriesList/RepositoriesList\";\r\nimport { loadRepositories } from \"@store/repositories/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction SearchFormWrapper() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadRepositories());\r\n  }, []);\r\n\r\n  const [search, setSearch] = useState<string>(\"\");\r\n\r\n  const wrapperRef = useRef<HTMLDivElement>(null);\r\n  const searchFormRef = useRef<HTMLFormElement>(null);\r\n\r\n  useEffect(() => {\r\n    function handleClickOutside(event: any) {\r\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n        searchFormRef.current?.clearSearch();\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [wrapperRef]);\r\n\r\n  return (\r\n    <div ref={wrapperRef} className=\"relative w-full\">\r\n      <SearchForm ref={searchFormRef} setOuterSearch={setSearch} />\r\n      <RepositoriesList search={search} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchFormWrapper;\r\n",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":34,"column":6,"nodeType":"71","endLine":34,"endColumn":14,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"73","line":31,"column":8,"nodeType":"71","endLine":31,"endColumn":25,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"69","severity":1,"message":"79","line":12,"column":6,"nodeType":"71","endLine":12,"endColumn":8,"suggestions":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'repositoriesList'. Either include it or remove the dependency array.","ArrayExpression",["83"],"React Hook useEffect has a missing dependency: 'setOuterSearch'. Either include it or remove the dependency array. If 'setOuterSearch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["84"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},"Update the dependencies array to be: [repositoriesList, search]",{"range":"92","text":"93"},"Update the dependencies array to be: [debouncedSearch, setOuterSearch]",{"range":"94","text":"95"},"Update the dependencies array to be: [dispatch]",{"range":"96","text":"97"},[988,996],"[repositoriesList, search]",[956,973],"[debouncedSearch, setOuterSearch]",[454,456],"[dispatch]"]